name: Publish containers

on:
  workflow_call:
    inputs:
      image:
        description: "image name"
        type: string
        default: "fluencelabs/rust-peer"
      version:
        description: "version set as part of container tag"
        type: string
      flavour:
        description: "rust-peer flavour"
        type: string
        default: "minimal"
      release:
        description: "if triggered by release workflow"
        type: boolean
        default: false
    outputs:
      rust-peer-image:
        description: "rust-peer snapshot image"
        value: ${{ jobs.publish.outputs.image }}

jobs:
  build:
    name: "Build and push ${{ inputs.flavour }}"
    runs-on: ubuntu-latest

    # for authentication to Vault with vault-action
    # https://github.com/hashicorp/vault-action#jwt-with-github-oidc-tokens
    permissions:
      contents: read
      id-token: write

    env:
      RELEASE_VERSION: ${{ inputs.version }}

    steps:
      - name: Set build date
        run: echo "BUILD_DATE=$(date '+%Y-%m-%dT%H:%M:%S%:z')" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Import secrets
        if: inputs.release
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          secrets: |
            kv/hub.docker.com/fluencebot username | DOCKER_USERNAME ;
            kv/hub.docker.com/fluencebot password | DOCKER_PASSWORD

      - name: Import secrets
        if: ${{ !inputs.release }}
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          secrets: |
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: inputs.release
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Login to private DockerHub
        if: ${{ !inputs.release }}
        uses: docker/login-action@v2
        with:
          registry: "docker.fluence.dev"
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push ${{ inputs.flavour }}
        id: docker
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          target: ${{ inputs.flavour }}
          tags: |
            ${{ inputs.image }}:${{ inputs.flavour }}
            ${{ inputs.image }}:${{ inputs.flavour }}_${{ env.RELEASE_VERSION }}
          labels: |
            org.opencontainers.image.version=${{ env.RELEASE_VERSION }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push ${{ inputs.flavour }}
        if: ${{ inputs.flavour == 'ipfs' && inputs.release }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          target: ${{ inputs.flavour }}
          tags: |
            ${{ inputs.image }}:latest
            ${{ inputs.image }}:${{ env.RELEASE_VERSION }}
          labels: |
            org.opencontainers.image.version=${{ env.RELEASE_VERSION }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker Hub Description
        if: ${{ inputs.flavour == 'ipfs' && inputs.release }}
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          repository: fluencelabs/rust-peer

      - name: Print results to check summary
        if: always()
        run: |
          cat <<'SNAPSHOT' >> $GITHUB_STEP_SUMMARY
          ## rust-peer ${{ inputs.flavour }}
          digest: `${{ steps.docker.outputs.digest }}`
          ```
          ${{ inputs.image }}:${{ inputs.flavour }}
          ${{ inputs.image }}:${{ inputs.flavour }}_${{ env.RELEASE_VERSION }}
          ```
          SNAPSHOT
