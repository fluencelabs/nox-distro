name: "release"

on:
  push:
    tags:
      - "v*"

env:
  RUN_NUMBER: ${{ github.run_number }}
  DOCKER_BUILDKIT: 1
  FORCE_COLOR: 1

jobs:
  prepare:
    name: "Prepare"
    runs-on: ubuntu-latest

    outputs:
      build_date: "${{ steps.build_date.outputs.date }}"
      release_version: "${{ steps.release_version.outputs.version }}"

    steps:
      - name: Set build date
        id: build_date
        run: echo "::set-output name=date::$(date '+%Y-%m-%dT%H:%M:%S%:z')"

      - name: Set release version
        id: release_version
        run: echo "::set-output name=version::$(echo ${GITHUB_REF#refs/*/})"

  build:
    name: Build and push ${{ matrix.package }}
    runs-on: ubuntu-latest

    needs: prepare

    env:
      BUILD_DATE: ${{ needs.prepare.outputs.build_date }}
      RELEASE_VERSION: ${{ needs.prepare.outputs.release_version }}

    strategy:
      matrix:
        package:
          - minimal
          - ipfs
          - rich

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Import secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          secrets: |
            kv/hub.docker.com/fluencebot username | DOCKER_USERNAME ;
            kv/hub.docker.com/fluencebot password | DOCKER_PASSWORD

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push ${{ matrix.package }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          target: ${{ matrix.package }}
          tags: |
            fluencelabs/rust-peer:${{ matrix.package }}
            fluencelabs/rust-peer:${{ matrix.package }}_${{ env.RELEASE_VERSION }}
            fluencelabs/fluence:${{ matrix.package }}
            fluencelabs/fluence:${{ matrix.package }}_${{ env.RELEASE_VERSION }}
          build-args: |
            COMMIT=${{ github.sha }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            RUN_NUMBER=${{ env.RUN_NUMBER }}
            TAG=${{ env.RELEASE_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push ${{ matrix.package }}
        if: matrix.package == 'ipfs'
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          target: ${{ matrix.package }}
          tags: |
            fluencelabs/rust-peer:latest
            fluencelabs/rust-peer:${{ env.RELEASE_VERSION }}
            fluencelabs/fluence:latest
            fluencelabs/fluence:${{ env.RELEASE_VERSION }}
          build-args: |
            COMMIT=${{ github.sha }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            RUN_NUMBER=${{ env.RUN_NUMBER }}
            TAG=${{ env.RELEASE_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker Hub Description
        if: matrix.package == 'ipfs'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: fluencelabs/rust-peer

  release:
    name: "Release"
    runs-on: ubuntu-latest

    needs:
      - prepare
      - build

    env:
      RELEASE_VERSION: ${{ needs.prepare.outputs.release_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ".github/misc/changelog_config.json"
          commitMode: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Fluence Node ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          body: |
            ${{ steps.github_release.outputs.changelog }}

            ## Docker tags

            ### ipfs
            Contains Fluence rust-peer and builtin IPFS deaemon.

            fluencelabs/rust-peer:latest
            fluencelabs/rust-peer:${{ env.RELEASE_VERSION }}
            fluencelabs/rust-peer:ipfs
            fluencelabs/rust-peer:ipfs_${{ env.RELEASE_VERSION }}

            ## minimal
            Contains Fluence rust-peer only.

            fluencelabs/rust-peer:minimal
            fluencelabs/rust-peer:minimal_${{ env.RELEASE_VERSION }}

            ## rich
            Contains Fluence rust-peer, IPFS, ceramic cli, bitcoin cli and geth cli.

            fluencelabs/rust-peer:rich
            fluencelabs/rust-peer:rich_${{ env.RELEASE_VERSION }}

          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
